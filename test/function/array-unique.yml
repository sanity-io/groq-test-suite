name: "array::unique() function"

version: ">= 1.1"

documents:
- _id: "a"
  _type: "doc"
  num: 1
  nums: [1, 2, 3]
  str: "baz"
  strs: ["a", "d"]
  mixeds: ["a", 2, null]
  obj:
    num: 1
    nums: [1, 2, 3]
    str: "baz"
    strs: ["a", "d"]
    mixeds: ["a", 2, null]
  objsOfNum:
  - num: 10
  - num: 11
  - num: 11
  - num: 12
  objsOfStr:
  - str: "f"
  - str: "f"
  - str: "g"
  objsOfMixed:
  - val: "x"
  - val: "x"
  - val: 14
  - val: 14
  - val: null
- _id: "b"
  _type: "doc"
  num: 22
  nums: [2, 3, 4]
  str: "foo"
  strs: []
  mixeds: []
  obj:
    num: 22
    nums: [2, 3, 4]
    str: "foo"
    strs: []
    mixeds: []
- _id: "c"
  _type: "doc"
  num: 99
  nums: [3, 4, 1, 5]
  str: "foo"
  strs: ["a", "b", "a", "a", "b"]
  mixeds: ["b", 99, null, true]
  obj:
    num: 99
    nums: [3, 4, 1, 5]
    str: "foo"
    strs: ["a", "b", "a", "a", "b"]
    mixeds: ["b", 99, null, true]
- _id: "d"
  _type: "doc"
  num: 22
  nums: []
  str: "bar"
  strs: ["a", "b"]
  mixeds: [false, 32, "c"]
  obj:
    num: 22
    nums: []
    str: "bar"
    strs: ["a", "b"]
    mixeds: [false, 32, "c"]

tests:
- query: |
    array::unique(~expr~) | order(@)
  tests:
  - name: Basic
    variables:
      expr: '[1, 2, 3, 3, 3, 3, 4, 2, 9, 3]'
    result: [1, 2, 3, 4, 9]
  - name: Mix of types
    variables:
      expr: '[1, 2, null, "hello", true, true, 3, 3, 3, 3, 4, 2, 9, 3, "world", "hello", null, true, false]'
    result: [1, 2, 3, 4, 9, "hello", "world", false, true, null]
  - name: Empty
    variables:
      expr: '[]'
    result: []
  - name: Non-existent attribute
    variables:
      expr: '*[].nonExistent'
    result: [null]
  - name: Number attribute
    variables:
      expr: '*[_type == "doc"].num'
    result: [1, 22, 99]
  - name: Number array attribute
    variables:
      expr: '*[_type == "doc"].nums[]'
    result: [1, 2, 3, 4, 5]
  - name: String attribute
    variables:
      expr: '*[_type == "doc"].str'
    result: ["bar", "baz", "foo"]
  - name: String array attribute
    variables:
      expr: '*[_type == "doc"].strs[]'
    result: ["a", "b", "d"]
  - name: Mixed array attribute
    variables:
      expr: '*[_type == "doc"].mixeds[]'
    result: [2, 32, 99, "a", "b", "c", false, true, null]
  - name: Nested number attribute
    variables:
      expr: '*[_type == "doc"].obj.num'
    result: [1, 22, 99]
  - name: Nested number array attribute
    variables:
      expr: '*[_type == "doc"].obj.nums[]'
    result: [1, 2, 3, 4, 5]
  - name: Nested string attribute
    variables:
      expr: '*[_type == "doc"].obj.str'
    result: ["bar", "baz", "foo"]
  - name: Nested string array attribute
    variables:
      expr: '*[_type == "doc"].obj.strs[]'
    result: ["a", "b", "d"]
  - name: Nested mixed array attribute
    variables:
      expr: '*[_type == "doc"].obj.mixeds[]'
    result: [2, 32, 99, "a", "b", "c", false, true, null]
  - name: Objects
    variables:
      expr: '[{"a": 42}, {"a": 42}]'
    result: [{"a": 42}, {"a": 42}]
  - name: Arrays
    variables:
      expr: '[[42], [42]]'
    result:
    - [42]
    - [42]

- name: Projection
  query: |
    *[_id == "a"][0] {
      "vals": array::unique(~expr~)
    }.vals | order(@)
  tests:
  - variables:
      expr: objsOfNum[].num
    result: [10, 11, 12]
  - variables:
      expr: objsOfStr[].str
    result: ["f", "g"]
  - variables:
      expr: objsOfMixed[].val
    result: [14, "x", null]
