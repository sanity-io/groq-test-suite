name: "references() function"
documents:
- _id: "a"
  _type: "doc"
  name: "A"
  ref:
    _ref: "b"
  arrref:
    - _ref: "c"
    - _ref: "d"
  objref:
    inner:
      _ref: "e"
- _id: "b"
  _type: "doc"
  name: "B"
- _id: "c"
  _type: "doc"
  name: "C"
- _id: "d"
  _type: "doc"
  name: "D"
- _id: "e"
  _type: "doc"
  name: "E"


- _id: "carrie-henn"
  _type: "moviedb"
  name: "Carrie Henn"
  nationality: "us"
- _id: "sigourney-weaver"
  _type: "moviedb"
  name: "Sigourney Weaver"
  nationality: "us"
  famousFor:
    _ref: "aliens"
    _weak: true
  deeply:
    famousFor:
      _ref: "aliens"
      _weak: true
  deepArray:
  - famousFor:
      _ref: "aliens"
      _weak: true
  deepNestedArray:
  - famousFor:
      reason: "Awesome Movie"
      movie:
        _ref: "aliens"
        _weak: true
- _id: "james-cameron"
  _type: "moviedb"
  name: "James Cameron"
  nationality: "ca"
- _id: "aliens"
  _type: "moviedb"
  title: "Aliens"
  directors:
  - _ref: "james-cameron"
  actors:
  - character: Newt
    actor:
      _ref: "carrie-henn"
  - character: Ellen Ripley
    actor:
      _ref: "sigourney-weaver"
- _id: "gorillas-in-the-mist"
  _type: "moviedb"
  title: "Gorillas in the Mist"
  actors:
  - character: "Dian Fossey"
    actor:
      _ref: "sigourney-weaver"

tests:
- name: "With namespace"
  features:
  - namespaces
  query: |
    *[global::references("b")]{name}
  result:
  - name: "A"

- name: "Basic"
  query: |
    *[references(~id~)]{name}
  result:
  - name: "A"
  tests:
  - variables: {id: '"b"'}
  - variables: {id: '"c"'}
  - variables: {id: '"d"'}
  - variables: {id: '"e"'}

- name: "Filtered"
  query: |
    *{ref,name}[references(~id~)]{name}
  tests:
  - {variables: {id: '"b"'}, result: [{name: "A"}]}
  - {variables: {id: '"c"'}, result: []}
  - {variables: {id: '"d"'}, result: []}
  - {variables: {id: '"e"'}, result: []}

- name: "Multiple and nested arguments"
  query: |
    *[references(~args~)][]._id
  result:
  - a
  - aliens
  variables:
    args:
    - '"c", "james-cameron"'
    - '["c", "james-cameron"]'
    - '["c"], ["james-cameron"]'
    - '1, null, ["c"], ["james-cameron"]'
    - '1, null, "c", 5 => 7, ["james-cameron"]'

- name: "With parent"
  query: |
    *[_id == "james-cameron"]{"refs": *[references(^._id)]._id}[0]
  result:
    refs:
    - "aliens"

- name: "With parent in array"
  query: |
    *[_id == "james-cameron"]{"refs": *[references(~args~)]._id}[0]
  result:
    refs:
    - "aliens"
  variables:
    args:
    - '^._id'
    - '[^._id]'
    - '123, ^._id'
    - '123, [^._id]'

- name: "With parent and constant"
  query: |
    *[_id == "james-cameron"]{"refs": *[references(~args~)]._id}[0]
  result:
    refs:
    - "a"
    - "aliens"
  variables:
    args:
    - '^._id, "c"'
    - '[^._id], "c"'
    - '[^._id], ["c"]'
    - '^._id, ["c"]'
    - '[123, ^._id], "c"'

- name: "Nested two levels"
  query: |
    *[references(~args~)][]._id
  variables:
    args:
    - '[["c"]]'
  result: []

- name: "Subquery"
  query: |
    *[references(*[_type == "moviedb"][]._id)][]._id|order(@)
  result:
  - aliens
  - gorillas-in-the-mist
  - sigourney-weaver

- name: "Invalid arguments"
  query: |
    *[_type == "doc"]{"res": references(~id~)}
  result:
  - {"res": false}
  - {"res": false}
  - {"res": false}
  - {"res": false}
  - {"res": false}
  variables:
    id:
    - '1'
    - 'null'
    - 'true'
    - 'false'
    - '"1" => "1"'
    - '"1" .. "1"'

- name: "Incorrect number of arguments"
  query: |
    *[_type == "doc"]{"res": references()}
  valid: false
