# See readme for how to test equality on scores.

name: "score() function"

features:
- scoring

documents:
- _id: "a"
  _type: "doc"
  value: 1
  text: "hello"
  bool: true
- _id: "b"
  _type: "doc"
  value: 2
  text: "Hello world"
  bool: true
- _id: "c"
  _type: "doc"
  value: 3
  text: "Thanks for all the fish"
  bool: false
- _id: "d"
  _type: "doc"
  value: 4
  text: "Fish, fish, just fish"
  bool: false

tests:
- name: Illegal use
  query: ~expr~
  valid: false
  variables:
    expr:
    - "*{foo} | score(a == 1)"
    - "*[0] | score(a == 1)"
    - "score(a == 1)"

- name: Equality
  features:
  - scoring
  query: |
    ~expr~ | score(value == 1) {_id, _score}
  variables:
    expr:
    - "*"
    - "*[0..-1]"
    - "*[_type == 'doc']"
  result:
  - _id: a
    _pos: 1
  - _id: b
    _pos: 2
  - _id: c
    _pos: 2
  - _id: d
    _pos: 2

- name: Inequality
  features:
  - scoring
  query: |
    ~expr~ | score(value != 1) {_id, _score}
  variables:
    expr:
    - "*"
    - "*[0..-1]"
    - "*[_type == 'doc']"
  result:
  - _id: b
    _pos: 1
  - _id: c
    _pos: 1
  - _id: d
    _pos: 1
  - _id: a
    _pos: 2

- name: Comparisons
  features:
  - scoring
  query: |
    ~expr~ | score(~score~) {_id, _score}
  variables:
    expr:
    - "*"
    - "*[0..-1]"
    - "*[_type == 'doc']"
  tests:
  - variables:
      score: 'value > 2'
    result:
    - _id: c
      _pos: 1
    - _id: d
      _pos: 1
    - _id: a
      _pos: 2
    - _id: b
      _pos: 2
  - variables:
      score: 'value >= 2'
    result:
    - _id: b
      _pos: 1
    - _id: c
      _pos: 1
    - _id: d
      _pos: 1
    - _id: a
      _pos: 2
  - variables:
      score: 'value < 2'
    result:
    - _id: a
      _pos: 1
    - _id: b
      _pos: 2
    - _id: c
      _pos: 2
    - _id: d
      _pos: 2
  - variables:
      score: 'value <= 2'
    result:
    - _id: a
      _pos: 1
    - _id: b
      _pos: 1
    - _id: c
      _pos: 2
    - _id: d
      _pos: 2

- name: Text match
  features:
  - scoring
  query: |
    ~expr~ | score(text match "fish") {_id, _score}
  variables:
    expr:
    - "*"
    - "*[0..-1]"
    - "*[_type == 'doc']"
  result:
  - _id: d
    _pos: 1
  - _id: c
    _pos: 2
  - _id: a
    _pos: 3
  - _id: b
    _pos: 3

- name: Negated text match
  features:
  - scoring
  query: |
    ~expr~ | score(!(text match "fish")) {_id, _score}
  variables:
    expr:
    - "*"
    - "*[0..-1]"
    - "*[_type == 'doc']"
  result:
  - _id: a
    _pos: 1
  - _id: b
    _pos: 1
  - _id: c
    _pos: 2
  - _id: d
    _pos: 2

- name: Explicit sort
  features:
  - scoring
  query: |
    ~expr~ | score(value == 1) | order(_score desc, _id) {_id, _score}
  variables:
    expr:
    - "*"
    - "*[0..-1]"
    - "*[_type == 'doc']"
  result:
  - _id: a
    _pos: 1
  - _id: b
    _pos: 2
  - _id: c
    _pos: 2
  - _id: d
    _pos: 2

- name: Override sort
  features:
  - scoring
  query: |
    ~expr~ | score(text match "fish") | order(_id) {_id, _score}
  variables:
    expr:
    - "*"
    - "*[0..-1]"
    - "*[_type == 'doc']"
  result:
  - _id: a
    _pos: 3
  - _id: b
    _pos: 3
  - _id: c
    _pos: 2
  - _id: d
    _pos: 1

- name: Add to sort
  features:
  - scoring
  query: |
    ~expr~ | order(_id) | score(text match "fish") {_id, _score}
  variables:
    expr:
    - "*"
    - "*[0..-1]"
    - "*[_type == 'doc']"
  result:
  - _id: d
    _pos: 1
  - _id: c
    _pos: 2
  - _id: a
    _pos: 3
  - _id: b
    _pos: 3

- name: Conjunction
  features:
  - scoring
  query: |
    ~expr~ | score(value > 1 && bool) {_id, "score": _score}
  variables:
    expr:
    - "*"
    - "*[0..-1]"
    - "*[_type == 'doc']"
  result:
  - {_id: b, score: 2}
  - {_id: a, score: 0}
  - {_id: c, score: 0}
  - {_id: d, score: 0}

- name: Conjunction with true
  features:
  - scoring
  query: |
    ~expr~ | score(value > 1 && true) {_id, "score": _score}
  variables:
    expr:
    - "*"
    - "*[0..-1]"
    - "*[_type == 'doc']"
  result:
  - {_id: b, score: 2}
  - {_id: c, score: 2}
  - {_id: d, score: 2}
  - {_id: a, score: 0}

- name: Conjunction with false
  features:
  - scoring
  query: |
    ~expr~ | score(value > 1 && false) {_id, "score": _score}
  variables:
    expr:
    - "*"
    - "*[0..-1]"
    - "*[_type == 'doc']"
  result:
  - {_id: a, score: 0}
  - {_id: b, score: 0}
  - {_id: c, score: 0}
  - {_id: d, score: 0}

- name: Disjunction
  features:
  - scoring
  query: |
    ~expr~ | score(value > 1 || bool) {_id, "score": _score}
  variables:
    expr:
    - "*"
    - "*[0..-1]"
    - "*[_type == 'doc']"
  result:
  - {_id: b, score: 2}
  - {_id: a, score: 1}
  - {_id: c, score: 1}
  - {_id: d, score: 1}

- name: Disjunction with true
  features:
  - scoring
  query: |
    ~expr~ | score(value > 1 || true) {_id, "score": _score}
  variables:
    expr:
    - "*"
    - "*[0..-1]"
    - "*[_type == 'doc']"
  result:
  - {_id: b, score: 2}
  - {_id: c, score: 2}
  - {_id: d, score: 2}
  - {_id: a, score: 1}

- name: Disjunction with false
  features:
  - scoring
  query: |
    ~expr~ | score(value > 1 || false) {_id, "score": _score}
  variables:
    expr:
    - "*"
    - "*[0..-1]"
    - "*[_type == 'doc']"
  result:
  - {_id: b, score: 1}
  - {_id: c, score: 1}
  - {_id: d, score: 1}
  - {_id: a, score: 0}
